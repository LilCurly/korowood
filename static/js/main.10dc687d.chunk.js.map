{"version":3,"sources":["logo.svg","HeaderLinks.js","Header.js","HeaderHamburgerNavigation.js","App.js","reportWebVitals.js","index.js"],"names":["HeaderLinks","className","this","props","isHorizontal","Component","Header","src","logo","alt","isMobile","toggled","isHamburgerOpen","toggle","hamburgerHandler","withGetScreen","mobileLimit","tabletLimit","shouldListenOnResize","HeaderHamburgerNavigation","App","setState","state","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAAe,G,MAAA,IAA0B,kC,wBC4B1BA,G,6KAtBP,OACI,qBAAIC,UAAW,iBAAmBC,KAAKC,MAAMC,aAAe,0BAA4B,yBAAxF,UACI,6BACI,uDAEJ,6BACI,qDAEJ,6BACI,yDAEJ,6BACI,qDAEJ,6BACI,2D,GAjBMC,cCKpBC,E,kDACF,WAAYH,GAAQ,uCACVA,G,qDAIN,OACI,sBAAKF,UAAU,aAAf,UACI,qBAAKA,UAAU,cAAf,SACI,qBAAKM,IAAKC,EAAMC,IAAI,WAExB,qBAAKR,UAAU,eAAf,SAEQC,KAAKC,MAAMO,WACX,cAAC,IAAD,CAAWT,UAAU,mBAAmBU,QAAST,KAAKC,MAAMS,gBAAiBC,OAAQX,KAAKC,MAAMW,mBAChG,cAAC,EAAD,CAAaV,cAAc,a,GAf9BC,aAuBNU,0BAAcT,EAAQ,CAACU,YAAa,IAAKC,YAAa,IAAMC,sBAAsB,ICblFC,G,wDAbX,WAAYhB,GAAQ,uCACVA,G,qDAIN,OACI,qBAAKF,UAAW,yBAA2BC,KAAKC,MAAMS,gBAAkB,oBAAqB,uBAA7F,SACI,cAAC,EAAD,CAAaR,cAAc,U,GARHC,cC4BzBe,E,kDAxBb,aAAe,IAAD,8BACZ,gBAOFN,iBAAmB,WACjB,EAAKO,SAAS,CACZT,iBAAkB,EAAKU,MAAMV,mBAP/B,EAAKU,MAAQ,CACXV,iBAAiB,GAJP,E,qDAeZ,OACE,sBAAKX,UAAU,MAAf,UACE,cAAC,EAAD,CAAQW,gBAAiBV,KAAKoB,MAAMV,gBAAiBE,iBAAkBZ,KAAKY,mBAC5E,cAAC,EAAD,CAA2BF,gBAAiBV,KAAKoB,MAAMV,gBAAiBE,iBAAkBZ,KAAKY,0B,GAnBrFT,aCIHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.10dc687d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.04fe0360.svg\";","import './HeaderLinks.scss';\r\n\r\nimport React, {Component} from 'react'\r\n\r\nclass HeaderLinks extends Component {\r\n    render() {\r\n        return (\r\n            <ul className={\"Header-links \" + (this.props.isHorizontal ? 'Header-links-horizontal' : 'Header-links-vertical')}>\r\n                <li>\r\n                    <span>Qui sommes-nous ?</span>\r\n                </li>\r\n                <li>\r\n                    <span>Nos engagements</span>\r\n                </li>\r\n                <li>\r\n                    <span>Nos r√©alisations</span>\r\n                </li>\r\n                <li>\r\n                    <span>Notre catalogue</span>\r\n                </li>\r\n                <li>\r\n                    <span>Nous contacter</span>\r\n                </li>\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderLinks;","import logo from './logo.svg';\r\nimport './Header.scss'\r\n\r\nimport {React, Component} from 'react'\r\nimport {Divide as Hamburger} from 'hamburger-react'\r\nimport {withGetScreen} from 'react-getscreen'\r\n\r\nimport HeaderLinks from './HeaderLinks'\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"App-header\">\r\n                <div className=\"Header-logo\">\r\n                    <img src={logo} alt=\"logo\"/>\r\n                </div>\r\n                <div className=\"Header-right\">\r\n                    {\r\n                        this.props.isMobile() ?\r\n                        <Hamburger className=\"Header-hamburger\" toggled={this.props.isHamburgerOpen} toggle={this.props.hamburgerHandler} /> :\r\n                        <HeaderLinks isHorizontal={true} />\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withGetScreen(Header, {mobileLimit: 780, tabletLimit: 1000, shouldListenOnResize: true})","import './HeaderHamburgerNavigation.scss';\r\n\r\nimport React, {Component} from 'react'\r\nimport HeaderLinks from './HeaderLinks.js'\r\n\r\nclass HeaderHamburgerNavigation extends Component {\r\n    constructor(props) {\r\n        super(props);    \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"Navigation-container \" + (this.props.isHamburgerOpen ? 'Container-visible': 'Container-invisible')}>\r\n                <HeaderLinks isHorizontal={false} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderHamburgerNavigation;","//import logo from './logo.svg';\nimport './App.scss';\n\nimport { React, Component } from 'react'\n\nimport Header from './Header'\nimport HeaderHamburgerNavigation from './HeaderHamburgerNavigation';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isHamburgerOpen: false\n    };\n  }\n\n  hamburgerHandler = () => {\n    this.setState({\n      isHamburgerOpen: !this.state.isHamburgerOpen\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header isHamburgerOpen={this.state.isHamburgerOpen} hamburgerHandler={this.hamburgerHandler} />\n        <HeaderHamburgerNavigation isHamburgerOpen={this.state.isHamburgerOpen} hamburgerHandler={this.hamburgerHandler} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}